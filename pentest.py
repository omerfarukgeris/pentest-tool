#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import subprocess

def banner():
	print("""
	 ____            _            _     _              _ 
      	|  _ \ ___ _ __ | |_ ___  ___| |_  | |_ ___   ___ | |
	| |_) / _ \ '_ \| __/ _ \/ __| __| | __/ _ \ / _ \| |
	|  __/  __/ | | | ||  __/\__ \ |_  | || (_) | (_) | |
	|_|   \___|_| |_|\__\___||___/\__|  \__\___/ \___/|_|
		 
	""")
def yaz(out):
	print('\033[1;32m'+out+'\033[1;m')

def oku(out):
	
	return input('\033[1;32m'+out+'\033[1;m')
	

def oku_int(out):
	while(True):
		try:
			return int(input('\033[1;32m'+out+'\033[1;m'))
		except ValueError:
			print('\033[1;32mHatalı Girdi\033[1;m')

def cmd(cmd):
	proc = subprocess.Popen(
		args=cmd,
	        #stdout=subprocess.PIPE,
		stderr=subprocess.PIPE,
	        shell=True,
		bufsize=1, 
		universal_newlines=True
	)
	(out,err)=proc.communicate()
	
	#print(out)
	if (err):
		yaz("Hata Çıktısı")
		print(err),	
		yaz("-"*50)
	
def cmd_out(cmd,begin,end):
	
	proc = subprocess.Popen(
		args=cmd,
	        stdout=subprocess.PIPE,
		stderr=subprocess.PIPE,
	        shell=True,
		bufsize=1, 
		universal_newlines=True
	)
	(out,err)=proc.communicate()
	
	print(out[out.find(begin):out.find(end)])
	if (err):
		yaz("Hata Çıktısı")
		print(err),	
		yaz("-"*50)
	
	


#bilgi toplama fonksiyonlar---------
def fonk_dns():
	while(1):	
		cmd("clear")
		banner();
		print("Parametre olarak girilen etki alanının İP adreslerini, DNS sunucuları, Mail sunucuları, vb bilgileri getirir.\ngoogle.com , facebook.com şeklinde giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("domain(ex. victim.com)--> ")
	
		if(q=="help"):
			cmd("dnsenum --help")
			oku("Geri--> ")
		elif(q=="q"):
			return	
		elif(q==""):
			continue
		else:
			cmd("dnsenum " +q);
			oku("--> ")

def fonk_subdomainFind():
	while(1):
		cmd("clear")
		banner()
		print("Parametre olarak girilen siteye ait subdomainler bulunur.\ngoogl.com, facebook.com gibi giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("domain(ex. victim.com)--> ")
	
		if(q=="help"):
			cmd("fierce -h")
			oku("Geri--> ")
		elif(q=="q"):
			return	
		elif(q==""):
			continue
		else:
			cmd_out("fierce -dns " +q,"Now performing","Subnets found");
			oku("--> ")
		

def fonk_mailFind():
	while(1):
		cmd("clear")
		banner()
		print("Parametre olarak girilen sitenin etki alanı ile oluşturulan email adresilerini bulur.\ngmail.com, hotmail.com gibi giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("email(ex. @hotmail.com)--> @")
	
		if(q=="help"):
			cmd("theharvester")
			oku("Geri--> ")
		elif(q=="q"):
			return			
		elif(q==""):
			continue
		else:
			cmd_out("theharvester -b all -s 0 -l 500 -d "+q,"[+] Email","[+] Hosts")
			oku("--> ")
			
		

def fonk_traceroute():
	while(1):
		cmd("clear")
		banner()
		print("Parametre olarak girilen domaine veya IP adresine gönderilen paketler ile \naradaki ağ cihazlarının ipsini basamak basamak yazdırır.\nwww.google.com, www.facebook.com, 178.23.145.56 gibi giriniz.\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("host--> ")
	
		if(q=="help"):
			cmd("traceroute")
			oku("Geri--> ")
		elif(q=="q"):
			return	
		elif(q==""):
			continue		
		else:
			cmd("traceroute "+q)
			oku("--> ")
				
		
#-------------bilgi toplama fonksiyonlar

#network fonsiyonlar-------------
def fonk_iptespit():
	while(1):
		cmd("clear")
		banner()
		print("Parametre olarak girilen url adresinin ip adresini döndürür.\nDNS brute force yaparak eğer herhangibir güvenlik cihazı var ise atlatmaya çalışarak gerçek ip ye ulaşmaya çalışır.\nwww.google.com, www.facebook.com şeklinde giriniz\n")
		print("help : Detaylı bilgi")	
		print("q    : Geri\n")
		q = oku("url(www.victim.com)--> ")
	
		if(q=="help"):
			cmd("nmap --help")
			oku("Geri--> ")
		elif(q=="q"):
			return
		
		else:
			cmd_out("nmap --script=dns-brute  " +q,"DNS Brute-force hostnames:","Nmap done:");
			oku("Geri--> ")

def fonk_osfind():
	q = oku("ip(71.154.98.23)--> ")
	
	if(q=="help"):
		cmd("nmap --help")
		oku("Geri--> ")
	elif(q=="info"):
		print("İşletim sistemini istediğiniz ip adresi giriniz.")
		oku("Geri--> ")
		
	else:
		cmd("nmap -O " +q);
		oku("Geri--> ")

#-------------------network fonsiyonlar



#menu----------------
def menu_bilgi():
	
	sec=""
	while(sec!=99):
		cmd("clear");
		banner()
		lists=["DNS Bilgileri",
			"Subdomain bul",
			"Mail adresi bul",
			"Traceroute"
			]
		for i in range(len(lists)):
			print(i+1,"-",lists[i])
		print("...\n99 - Geri")
		sec = oku_int("--> ")
		
		if sec > len(lists):
			if sec == 99:
				break
			sec=""			
			continue
		elif lists[sec-1] == lists[0]:
			fonk_dns()
		elif lists[sec-1] == lists[1]:
			fonk_subdomainFind()	
		elif lists[sec-1] == lists[2]:
			fonk_mailFind()	
		elif lists[sec-1] == lists[3]:
			fonk_traceroute()	

		
def menu_network():
	sec=""
	while(sec!=99):
		cmd("clear");
		banner()
		lists=["Ip Tespiti",
			"İşletim Sistemi Bul",
			"Servis ve Uygulama Bilgisi",
			"Ağdaki Tüm Hostları Bul",
			"Ağ Yolunu Çıkart",
			"Agresif Tarama",
			"Normal Tarama"
			]
		for i in range(len(lists)):
			print(i+1,"-",lists[i])
		print("...\n99 - Geri")
		sec = oku_int("--> ")
		
		if sec > len(lists):
			if sec == 99:
				break
			sec=""			
			continue
		elif lists[sec-1] == lists[0]:
			fonk_iptespit()
		elif lists[sec-1] == lists[1]:
			fonk_osfind()
		
		

menu_list = [
		"Bilgi Toplama",
		"Network",
		"Web",
		"Exploit",
		"Post-exploit",
		"Clean"
		]

def main_menu():
	
	
	banner()

	for i in range(len(menu_list)):
		print(i+1,"-",menu_list[i])
	print("...\n99 - Cıkış")

sec=""

while(sec!=99):
	cmd("clear")
	
	main_menu()
	sec = oku_int("--> ")
	
	if (sec > len(menu_list)):
		if ((sec == 99) | (sec == "q")):
			break	
		sec=""
		continue

	elif (menu_list[sec-1] == menu_list[0]):
		menu_bilgi()
	elif (menu_list[sec-1] == menu_list[1]):
		menu_network()	
	


















